KRACK Tutorial by Ali and Jacob

In this tutorial you are going to intercept communications between a router and
client (man in the middle attack) and decrypt the sent messages.

PART 1: INTERCEPT COMMUNICATIONS AND FORCE KEY RE-INSTALL

Definitions:
Router = Authenticator = Access Point = AP = ap = ap.py
Client = Supplicant = cl = client.py 
Man in the middle = MIM = You = mim = mim.py

SETUP:
    Open a new terminal and run ap.py
    Open a new terminal and run client.py

Press enter in client.py to initiate the handshake.
Observe the 4-way handshake between the two processes

This is where you come in.
Now, before initiating the handshake, open a new terminal and run mim.py
mim.py can jam communications, it does this by pretending to be the router and
connecting to the client. Then the client will send its messages to mim.py.
NOTE: ap.py will still continue sending messages to the client as if nothing has
changed.

To jam the communications through mim:
   Make sure SETUP is done
   Make sure mim.py is running in its own terminal
   Open a new terminal
   Open a python shell (type python)
   run the following:
   import rpyc
   conn = rpyc.connect("localhost", 18813)
   c = conn.root
   Now you can initiate the handshake in client.py
   During the handshake, run 'c.exposed_hijack()' in the Python shell to hijack
   the communications
   
Use this to force the client to do a key-reinstall
If done corrently, this will cause the client to encrypt both its messages with
the same key.

Once you have succeeded, copy both the ciphertexts(encrypted with the same key)
and move on to PART 2.

PART 2: CRIB DRAGGING

First xor the two ciphertexts using xorstrings.py
Open a new terminal and run:
script screen.log
python xorstrings.py ciphertext1 ciphertext2

Once you have the xor'd-ciphertext, cribdrag it using cribdrag.py
In the same terminal run:
python cribdrag.py xor'd-ciphertext
Follow the prompts and see if you can *krack* the code (haha see what I did there) 
The basics:
The crib is a word or phrase you think will be in the messages
Go through the possible matches to see if a position makes sense
If you get a match, enter the matched position and the messages will be updated.
Rinse and repeat.

Once you get the messages type 'exit' in the terminal, and submit script.log to
UTORSubmit

